Mappings I already know (at least pretty well)

i - insert before cursor
a - append after cursor
A - append at end of line
x - delete currently selected character
O - create new line above and insert
o - create new line below and insert
u - undo the last change
:w filename - write file
:q - quit vim
:wq filename - write file and quit vim
h - move to the left (right index finger)
t - move down (right middle finger)
n - move to the right (right ring finger)
c - move up (right middle finger moves up)


Mappings I am trying to learn


MOVEMENT MAPPINGS:

b - move to beginning of word
e - move to the end of a word (forms a pair with b)

^ - move to the beginning of the current line
$ - move to the end of the current line

f<char> - moves the cursor to the next occurance of character <char>


MOST IMPORTANT MOVEMENT MAPPINGS: 

/<pattern> 				- moves the cursor to the next occurance of patter
?<pattern> 				- moves the cursor to the previous " "
* 						- moves to next occurence of word underneath cursor
						- this can then be chained with <leader>n 
zz						- redraws vim with current line at center of screen

						-- TEXT REPLACEMENT -- 
:s/pattern1/pattern2 	- replaces pattern 1 with pattern 2 on current line
:%s/pattern1/pattern2 	- replaces all occurences of pattern 1 with pattern 2
<leader>cw				- replaces a word and puts you in insert mode
dw						- deletes from current character to end of word
daw						- deletes the word under the current cursor (it's great)
R						- enter replace mode
gR						- enter virtual replace mode (tabs ignored-ish)
r{char}					- replace a character under cursor with char


IN INSERT MODE:

<Ctrl-h>				- deletes back  a character
<Ctrl-w>				- deletes back a word
<Ctrl-u>				- deletes back a line
<Ctrl-o>				- enter normal mode for a single command
<Ctrl-k>				- enter digraph mode (greek letters and math!)
						- see  :digraphs 

FOR VISUAL MODE:

v						- enter visual mode
V						- enter line-based visual mode
<Ctrl-V>				- enter block visual mode
gv 						- reselect last visual selection
o						- go to other end of highlighted text
>						- indent with forward tabs
<						- indent with backward tabs
U						- convert to uppercase
r{char}					- replaces highlighted with character

Note: each of these commands works from within visual mode itself


TEXT MODIFICATION / OPERATORS
gU	- make uppercase
gu	- make lowercase

Tip: Repeating an operator twice performs the action on the current line. So to capitalize a line you would type gUgU. You can also create your own operators, which could let you comment out lines or blocks of code :DDD

		-- ADDITIONAL COOL STUFF --

:sp filename 		- Splits the VIM window horizontally
:vs filename 		- Splits the VIM window vertically
:source ~/.vimrc 	- Updates the vimrc without closing vim
:digraph			- pulls up list of available digraphs


