BOOK ACHIEVEMENTS:
=======================
	* I feel much more comfortable using vim, and I actually feel uncomfortable using other editors
	* I now use git to maintain my notes, and I actually take notes on the books I am reading
	* I created a basic python program to analyze and print my time data
	* I understand the very basics of reST documentation and have plans to use it once I finish reading my python books.
	* I understand and agree with the principles of Tracer Bullets, DRY, Prototyping and Post-It Notes, Orthogonality, and Ruthless Testing.

WHAT CONSTITUTES SUCCESS:
==========================
	* I have a solid enough understanding to automate almost any repetitive task with a combination of python and the bash shell
	* I can visualize and manipulate data with python
For these reasons, it is probably only necessary to read one book on the UNIX shell, and python can be used to take care of the rest in conjunction with git/vim. Only one book on the shell is necessary, and might even be overkill.

COMPLETED BOOKS:
----------------------
	* (h) 04/11/2018-04/14/2018: A Smarter Way to Learn Python 
	* (h) 04/15/2018-04/20/2018: Python Tricks: A Buffet of Awesome Features
	* (h) 04/21-2018-04/22/2018: Ry's Git Tutorial
	* (h) 04/21-2018-04/23/2018: The Pragmatic Programmer from Journeyman to Master - Amazon

CURRENT BOOKS:
----------------------
	* (h) 04/15/2018-PRESENT: Practical Vim, 2nd Edition
	* (h) 04/16/2018-PRESENT: Python Data Analysis Handbook
	* (h) 04/19/2018-PRESENT: Fluent Python
	* (h) 04/23/2018-PRESENT: The Linux Command Line: A Complete Introduction

FUTURE BOOKS:
----------------------
	* (h) The Hitchhiker's Guide to Python (primarily for the documentation and testing sections)
	* (m) Mastering Regular Expressions - Amazon
	* (l) The Art of the Metaobject Protocol - Amazon
	* (l) Pro Git - Amazon (purchased free kindle edition)
	* Maybe a book on testing?  
	* Effective C++ by Scott Meyer if you need it.

(l) low priority
(m) medium priority
(h) high priority
(u) urgent - must read now
